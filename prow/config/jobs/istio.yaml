org: istio
repo: istio
support_release_branching: true
image: gcr.io/istio-testing/build-tools:master-21f37360cfc984d6ff16821ee423f213d09017e9
jobs:
  - name: unit-tests
    architectures: [amd64, arm64]
    command: [entrypoint, make, -e, "T=-v -count=1", build, racetest, binaries-test]
    resources: dedicated

  - name: release-test
    service_account_name: prowjob-advanced-sa
    types: [presubmit]
    command: [entrypoint, prow/release-test.sh]
    requirements: [docker]
    resources: dedicated

  - name: release
    service_account_name: prowjob-advanced-sa
    types: [postsubmit]
    command: [entrypoint, prow/release-commit.sh]
    requirements: [docker]
    resources: dedicated

  - name: benchmark
    types: [presubmit]
    modifiers: [presubmit_optional, presubmit_skipped]
    command: [entrypoint, make, benchtest]
    resources: dedicated

  - name: benchmark-report
    service_account_name: prowjob-advanced-sa
    types: [postsubmit]
    command: [entrypoint, make, benchtest, report-benchtest]
    resources: dedicated

  - name: integ-cni
    types: [presubmit]
    command: [entrypoint, prow/integ-suite-kind.sh, test.integration.pilot.kube.presubmit]
    requirements: [kind]
    env:
      - name: INTEGRATION_TEST_FLAGS
        value: " --istio.test.istio.enableCNI=true "

  - name: integ-telemetry
    command: [entrypoint, prow/integ-suite-kind.sh, test.integration.telemetry.kube]
    requirements: [kind]

  - name: integ-telemetry-mc
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --topology
      - MULTICLUSTER
      - test.integration.telemetry.kube
    requirements: [kind]
    resources: multicluster

  - name: integ-telemetry-istiodremote
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --topology
      - MULTICLUSTER
      - --topology-config
      - prow/config/topology/external-istiod.json
      - test.integration.telemetry.kube
    requirements: [kind]
    resources: multicluster
    env:
      - name: INTEGRATION_TEST_FLAGS
        value: --istio.test.skipVM

  - name: integ-distroless
    command: [entrypoint, prow/integ-suite-kind.sh, test.integration.kube.environment]
    requirements: [kind]
    env:
      - name: VARIANT
        value: "distroless"

  - name: integ-ipv6
    command: [entrypoint, prow/integ-suite-kind.sh, test.integration.kube.environment]
    requirements: [kind]
    env:
      - name: DOCKER_IN_DOCKER_IPV6_ENABLED
        value: "true"
      - name: IP_FAMILY
        value: "ipv6"

  - name: integ-ds
    command: [entrypoint, prow/integ-suite-kind.sh, test.integration.kube.environment]
    requirements: [kind]
    env:
      - name: DOCKER_IN_DOCKER_IPV6_ENABLED
        value: "true"
      - name: IP_FAMILY
        value: "dual"

  - name: integ-basic
    architectures: [arm64]
    command: [entrypoint, prow/integ-suite-kind.sh, test.integration.kube.environment]
    requirements: [kind]

  - name: integ-operator-controller
    command: [entrypoint, prow/integ-suite-kind.sh, test.integration.operator.kube]
    requirements: [kind]

  - name: integ-pilot
    command: [entrypoint, prow/integ-suite-kind.sh, test.integration.pilot.kube]
    requirements: [kind]

  - name: integ-pilot-cpp
    types: [postsubmit]
    command: [entrypoint, prow/integ-suite-kind.sh, test.integration.pilot.kube]
    requirements: [kind]
    env:
      # TODO(yashykt): Move the code for this image to the istio repository.
      - name: GRPC_ECHO_IMAGE
        value: "grpctesting/istio_echo_cpp"

  - name: integ-pilot-multicluster
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --topology
      - MULTICLUSTER
      - test.integration.pilot.kube
    requirements: [kind]
    resources: multicluster

  - name: integ-pilot-istiodremote
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --topology
      - MULTICLUSTER
      - --topology-config
      - prow/config/topology/external-istiod.json
      - test.integration.pilot.kube
    requirements: [kind]
    resources: multicluster
    env:
      - name: INTEGRATION_TEST_FLAGS
        value: --istio.test.skipVM

  - name: integ-pilot-istiodremote-mc
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --topology
      - MULTICLUSTER
      - --topology-config
      - prow/config/topology/external-istiod-multicluster.json
      - test.integration.pilot.kube
    requirements: [kind]
    resources: multicluster
    env:
      - name: INTEGRATION_TEST_FLAGS
        value: --istio.test.skipVM

  - name: integ-security
    command: [entrypoint, prow/integ-suite-kind.sh, test.integration.security.kube]
    requirements: [kind]

  - name: integ-security-fuzz
    types: [periodic]
    cron: "0 7 * * *" # starts every day at 07:00AM UTC
    command: [entrypoint, prow/integ-suite-kind.sh, test.integration-fuzz.security.fuzz.kube]
    requirements: [kind]

  - name: integ-security-multicluster
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --topology
      - MULTICLUSTER
      - test.integration.security.kube
    requirements: [kind]
    resources: multicluster

  - name: integ-security-istiodremote
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --topology
      - MULTICLUSTER
      - --topology-config
      - prow/config/topology/external-istiod.json
      - test.integration.security.kube
    requirements: [kind]
    resources: multicluster
    env:
      - name: INTEGRATION_TEST_FLAGS
        value: --istio.test.skipVM

  - name: integ-ambient
    requirements: [kind]
    env:
    - name: INTEGRATION_TEST_FLAGS
      value: --istio.test.ambient
    # Until fully passing
    modifiers:
    - presubmit_skipped
    - hidden
    command:
    - entrypoint
    - prow/integ-suite-kind.sh
    - --kind-config
    - prow/config/ambient-sc.yaml
    - test.integration.ambient.kube

  - name: integ-helm
    command: [entrypoint, prow/integ-suite-kind.sh, test.integration.helm.kube]
    requirements: [kind]

    # The node image must be kept in sync with the kind version we use.
    # See istio.io/tools/docker/build-tools for the kind image
    # https://github.com/kubernetes-sigs/kind/releases for node corresponding node image
  - name: integ-k8s-120
    types: [postsubmit]
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --node-image
      - gcr.io/istio-testing/kind-node:v1.20.7
      - --kind-config
      - prow/config/mixedlb-service.yaml
      - test.integration.kube
    requirements: [kind]
    timeout: 4h
    env:
      - name: INTEGRATION_TEST_FLAGS
        value: " --istio.test.retries=1 "

  - name: integ-k8s-121
    types: [postsubmit]
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --node-image
      - gcr.io/istio-testing/kind-node:v1.21.1
      - --kind-config
      - prow/config/mixedlb-service.yaml
      - test.integration.kube
    requirements: [kind]
    timeout: 4h
    env:
      - name: INTEGRATION_TEST_FLAGS
        value: " --istio.test.retries=1 "

  - name: integ-k8s-122
    types: [postsubmit]
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --node-image
      - gcr.io/istio-testing/kind-node:v1.22.2
      - --kind-config
      - prow/config/mixedlb-service.yaml
      - test.integration.kube
    requirements: [kind]
    timeout: 4h
    env:
      - name: INTEGRATION_TEST_FLAGS
        value: " --istio.test.retries=1 "

  - name: integ-k8s-123
    types: [postsubmit]
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --node-image
      - gcr.io/istio-testing/kind-node:v1.23.1
      - test.integration.kube
    requirements: [kind]
    timeout: 4h
    env:
      - name: INTEGRATION_TEST_FLAGS
        value: " --istio.test.retries=1 "

  - name: integ-k8s-124
    types: [postsubmit]
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --node-image
      - gcr.io/istio-testing/kind-node:v1.24.3
      - test.integration.kube
    requirements: [kind]
    timeout: 4h
    env:
      - name: INTEGRATION_TEST_FLAGS
        value: " --istio.test.retries=1 "

  - name: integ-k8s-125
    types: [postsubmit]
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - --node-image
      - gcr.io/istio-testing/kind-node:v1.25.4
      - test.integration.kube
    requirements: [kind]
    timeout: 4h
    env:
      - name: INTEGRATION_TEST_FLAGS
        value: " --istio.test.retries=1 "

  - name: integ-cni
    types: [postsubmit]
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - test.integration.kube
    requirements: [kind]
    timeout: 4h
    env:
      - name: TEST_SELECT
        value: "-flaky"
      - name: INTEGRATION_TEST_FLAGS
        value: " --istio.test.retries=1 --istio.test.istio.enableCNI=true "

  # Test with assertions enabled.
  - name: integ-assertion
    modifiers: [presubmit_optional, presubmit_skipped] #  We run this in postsubmit always, but let developers explicitly run in presubmit
    command:
      - entrypoint
      - prow/integ-suite-kind.sh
      - test.integration.kube
    requirements: [kind]
    timeout: 4h
    env:
      - name: INTEGRATION_TEST_FLAGS
        value: " --istio.test.istio.operatorOptions=values.pilot.env.UNSAFE_PILOT_ENABLE_RUNTIME_ASSERTIONS=true "

  - name: analyze-tests
    types: [presubmit]
    command: [make, test.integration.analyze]

  - name: lint
    types: [presubmit]
    command: [make, lint]
    resources: lint

  - name: gencheck
    types: [presubmit]
    command: [make, gen-check]

  - name: release-notes
    types: [presubmit]
    command:
      - ../test-infra/tools/check_release_notes.sh
      - --token-path=/etc/github-token/oauth
    requirements: [github]
    repos: [istio/test-infra@master,istio/tools@master]

  # Recreate base images if the dockerfile changes (in postsubmit)
  - name: build-base-images
    repos: [istio/release-builder@master]
    types: [postsubmit]
    regex: '^(docker|pkg/.*)/Dockerfile.([a-zA-Z0-9_]+_)?base(_[a-zA-Z0-9_]+)?$'
    env:
    - name: BUILD_BASE_IMAGES
      value: "true"
    - name: VERSION
      value: "master"
    - name: ALWAYS_GENERATE_BASE_IMAGE
      value: "true"
    command: [entrypoint, ../release-builder/release/build.sh]
    requirements: [release, docker, github-optional]

  - name: update-deps
    types: [periodic]
    cron: "0 2 * * 0" # run each Sunday at 02:00AM UTC
    command:
    - ../test-infra/tools/automator/automator.sh
    - --org=istio
    - --repo=istio,proxy
    - "--title=Automator: update go dependencies@$AUTOMATOR_SRC_BRANCH in $AUTOMATOR_ORG/$AUTOMATOR_REPO@$AUTOMATOR_BRANCH"
    - --labels=auto-merge,release-notes-none
    - --modifier=update_deps
    - --token-path=/etc/github-token/oauth
    - --cmd=go get github.com/envoyproxy/go-control-plane@main && go mod tidy && make clean gen
    requirements: [github]
    repos: [istio/test-infra@master]

resources_presets:
  default:
    requests:
      memory: "3Gi"
      cpu: "5000m"
    limits:
      memory: "24Gi"
      cpu: "5000m"
  # TODO: this was set while investigating https://github.com/istio/istio/issues/32985
  # We should consider if this is needed long term, as its expensive
  multicluster:
    requests:
      memory: "3Gi"
      # This ensures we have at most one multicluster job on a node
      # Nodes have 16CPUs, with some overhead
      cpu: "8000m"
    limits:
      memory: "24Gi"
      cpu: "8000m"
  lint:
    requests:
      memory: "16Gi"
      cpu: "3000m"
    limits:
      memory: "24Gi"
  # Give 15 CPUs which will put us on a dedicated node, for consistency
  dedicated:
    requests:
      memory: "8Gi"
      cpu: "15000m"
    limits:
      memory: "24Gi"
requirements: [gocache]
