branches:
- release-1.16
env:
- name: BUILD_WITH_CONTAINER
  value: "0"
- name: BUILD_WITH_CONTAINER
  value: "0"
image: gcr.io/istio-testing/build-tools:release-1.16-8486d4a9cee5aabbcf2a332c85a56d3339585e5d
jobs:
- command:
  - make
  - build
  env:
  - name: BUILD_WITH_CONTAINER
    value: "0"
  image: gcr.io/istio-testing/build-tools:release-1.16-8486d4a9cee5aabbcf2a332c85a56d3339585e5d
  name: build
  node_selector:
    testing: test-pool
  requirement_presets:
    cache:
      volumeMounts:
      - mountPath: /home/prow/go/pkg
        name: build-cache
        subPath: gomod
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    docker:
      volumeMounts:
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - emptyDir: {}
        name: docker-root
    github:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          secretName: oauth-token
    github-optional:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          optional: true
          secretName: oauth-token
    gocache:
      volumeMounts:
      - mountPath: /gocache
        name: build-cache
        subPath: gocache
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    kind:
      volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
        readOnly: true
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - emptyDir: {}
        name: docker-root
    release:
      env:
      - name: COSIGN_KEY
        valueFrom:
          secretKeyRef:
            key: key
            name: cosign-key
      - name: DOCKER_CONFIG
        value: /etc/rel-pipeline-docker-config
      - name: GITHUB_TOKEN_FILE
        value: /etc/github/rel-pipeline-github
      - name: GRAFANA_TOKEN_FILE
        value: /etc/grafana/token
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/rel-pipeline-service-account.json
      volumeMounts:
      - mountPath: /etc/rel-pipeline-docker-config
        name: rel-pipeline-docker-config
      - mountPath: /etc/github
        name: rel-pipeline-github
        readOnly: true
      - mountPath: /etc/grafana
        name: rel-pipeline-grafana
        readOnly: true
      - mountPath: /etc/service-account
        name: rel-pipeline-service-account
        readOnly: true
      volumes:
      - name: rel-pipeline-service-account
        secret:
          secretName: rel-pipeline-service-account
      - name: rel-pipeline-github
        secret:
          secretName: rel-pipeline-github
      - name: rel-pipeline-grafana
        secret:
          secretName: grafana-token
      - name: rel-pipeline-docker-config
        secret:
          secretName: rel-pipeline-docker-config
  requirements:
  - cache
  - cache
  resources_presets:
    build:
      limits:
        cpu: "8"
        memory: 24Gi
      requests:
        cpu: "8"
        memory: 4Gi
    default:
      limits:
        cpu: "3"
        memory: 24Gi
      requests:
        cpu: "1"
        memory: 3Gi
- command:
  - make
  - lint
  env:
  - name: BUILD_WITH_CONTAINER
    value: "0"
  image: gcr.io/istio-testing/build-tools:release-1.16-8486d4a9cee5aabbcf2a332c85a56d3339585e5d
  name: lint
  node_selector:
    testing: test-pool
  requirement_presets:
    cache:
      volumeMounts:
      - mountPath: /home/prow/go/pkg
        name: build-cache
        subPath: gomod
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    docker:
      volumeMounts:
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - emptyDir: {}
        name: docker-root
    github:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          secretName: oauth-token
    github-optional:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          optional: true
          secretName: oauth-token
    gocache:
      volumeMounts:
      - mountPath: /gocache
        name: build-cache
        subPath: gocache
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    kind:
      volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
        readOnly: true
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - emptyDir: {}
        name: docker-root
    release:
      env:
      - name: COSIGN_KEY
        valueFrom:
          secretKeyRef:
            key: key
            name: cosign-key
      - name: DOCKER_CONFIG
        value: /etc/rel-pipeline-docker-config
      - name: GITHUB_TOKEN_FILE
        value: /etc/github/rel-pipeline-github
      - name: GRAFANA_TOKEN_FILE
        value: /etc/grafana/token
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/rel-pipeline-service-account.json
      volumeMounts:
      - mountPath: /etc/rel-pipeline-docker-config
        name: rel-pipeline-docker-config
      - mountPath: /etc/github
        name: rel-pipeline-github
        readOnly: true
      - mountPath: /etc/grafana
        name: rel-pipeline-grafana
        readOnly: true
      - mountPath: /etc/service-account
        name: rel-pipeline-service-account
        readOnly: true
      volumes:
      - name: rel-pipeline-service-account
        secret:
          secretName: rel-pipeline-service-account
      - name: rel-pipeline-github
        secret:
          secretName: rel-pipeline-github
      - name: rel-pipeline-grafana
        secret:
          secretName: grafana-token
      - name: rel-pipeline-docker-config
        secret:
          secretName: rel-pipeline-docker-config
  requirements:
  - cache
  - cache
  resources_presets:
    build:
      limits:
        cpu: "8"
        memory: 24Gi
      requests:
        cpu: "8"
        memory: 4Gi
    default:
      limits:
        cpu: "3"
        memory: 24Gi
      requests:
        cpu: "1"
        memory: 3Gi
- command:
  - make
  - test
  env:
  - name: BUILD_WITH_CONTAINER
    value: "0"
  image: gcr.io/istio-testing/build-tools:release-1.16-8486d4a9cee5aabbcf2a332c85a56d3339585e5d
  name: test
  node_selector:
    testing: test-pool
  requirement_presets:
    cache:
      volumeMounts:
      - mountPath: /home/prow/go/pkg
        name: build-cache
        subPath: gomod
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    docker:
      volumeMounts:
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - emptyDir: {}
        name: docker-root
    github:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          secretName: oauth-token
    github-optional:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          optional: true
          secretName: oauth-token
    gocache:
      volumeMounts:
      - mountPath: /gocache
        name: build-cache
        subPath: gocache
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    kind:
      volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
        readOnly: true
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - emptyDir: {}
        name: docker-root
    release:
      env:
      - name: COSIGN_KEY
        valueFrom:
          secretKeyRef:
            key: key
            name: cosign-key
      - name: DOCKER_CONFIG
        value: /etc/rel-pipeline-docker-config
      - name: GITHUB_TOKEN_FILE
        value: /etc/github/rel-pipeline-github
      - name: GRAFANA_TOKEN_FILE
        value: /etc/grafana/token
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/rel-pipeline-service-account.json
      volumeMounts:
      - mountPath: /etc/rel-pipeline-docker-config
        name: rel-pipeline-docker-config
      - mountPath: /etc/github
        name: rel-pipeline-github
        readOnly: true
      - mountPath: /etc/grafana
        name: rel-pipeline-grafana
        readOnly: true
      - mountPath: /etc/service-account
        name: rel-pipeline-service-account
        readOnly: true
      volumes:
      - name: rel-pipeline-service-account
        secret:
          secretName: rel-pipeline-service-account
      - name: rel-pipeline-github
        secret:
          secretName: rel-pipeline-github
      - name: rel-pipeline-grafana
        secret:
          secretName: grafana-token
      - name: rel-pipeline-docker-config
        secret:
          secretName: rel-pipeline-docker-config
  requirements:
  - cache
  - cache
  resources_presets:
    build:
      limits:
        cpu: "8"
        memory: 24Gi
      requests:
        cpu: "8"
        memory: 4Gi
    default:
      limits:
        cpu: "3"
        memory: 24Gi
      requests:
        cpu: "1"
        memory: 3Gi
- command:
  - make
  - gen-check
  env:
  - name: BUILD_WITH_CONTAINER
    value: "0"
  image: gcr.io/istio-testing/build-tools:release-1.16-8486d4a9cee5aabbcf2a332c85a56d3339585e5d
  name: gencheck
  node_selector:
    testing: test-pool
  requirement_presets:
    cache:
      volumeMounts:
      - mountPath: /home/prow/go/pkg
        name: build-cache
        subPath: gomod
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    docker:
      volumeMounts:
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - emptyDir: {}
        name: docker-root
    github:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          secretName: oauth-token
    github-optional:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          optional: true
          secretName: oauth-token
    gocache:
      volumeMounts:
      - mountPath: /gocache
        name: build-cache
        subPath: gocache
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    kind:
      volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
        readOnly: true
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - emptyDir: {}
        name: docker-root
    release:
      env:
      - name: COSIGN_KEY
        valueFrom:
          secretKeyRef:
            key: key
            name: cosign-key
      - name: DOCKER_CONFIG
        value: /etc/rel-pipeline-docker-config
      - name: GITHUB_TOKEN_FILE
        value: /etc/github/rel-pipeline-github
      - name: GRAFANA_TOKEN_FILE
        value: /etc/grafana/token
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/rel-pipeline-service-account.json
      volumeMounts:
      - mountPath: /etc/rel-pipeline-docker-config
        name: rel-pipeline-docker-config
      - mountPath: /etc/github
        name: rel-pipeline-github
        readOnly: true
      - mountPath: /etc/grafana
        name: rel-pipeline-grafana
        readOnly: true
      - mountPath: /etc/service-account
        name: rel-pipeline-service-account
        readOnly: true
      volumes:
      - name: rel-pipeline-service-account
        secret:
          secretName: rel-pipeline-service-account
      - name: rel-pipeline-github
        secret:
          secretName: rel-pipeline-github
      - name: rel-pipeline-grafana
        secret:
          secretName: grafana-token
      - name: rel-pipeline-docker-config
        secret:
          secretName: rel-pipeline-docker-config
  requirements:
  - cache
  - cache
  resources_presets:
    build:
      limits:
        cpu: "8"
        memory: 24Gi
      requests:
        cpu: "8"
        memory: 4Gi
    default:
      limits:
        cpu: "3"
        memory: 24Gi
      requests:
        cpu: "1"
        memory: 3Gi
- command:
  - entrypoint
  - ../test-infra/tools/automator/automator.sh
  - --org=istio
  - --repo=common-files
  - '--title=Automator: update build-tools image@$AUTOMATOR_SRC_BRANCH in $AUTOMATOR_ORG/$AUTOMATOR_REPO@$AUTOMATOR_BRANCH'
  - --labels=release-notes-none
  - --modifier=update_image_version
  - --token-path=/etc/github-token/oauth
  - --script-path=../common-files/bin/create-buildtools-and-update.sh
  env:
  - name: BUILD_WITH_CONTAINER
    value: "0"
  - name: MANIFEST_ARCH
    value: arm64 amd64
  image: gcr.io/istio-testing/build-tools:release-1.16-8486d4a9cee5aabbcf2a332c85a56d3339585e5d
  name: containers
  node_selector:
    testing: test-pool
  regex: docker/.+|cmd/.+|pkg/.+
  repos:
  - istio/test-infra@master
  - istio/common-files@master
  requirement_presets:
    cache:
      volumeMounts:
      - mountPath: /home/prow/go/pkg
        name: build-cache
        subPath: gomod
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    docker:
      volumeMounts:
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - emptyDir: {}
        name: docker-root
    github:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          secretName: oauth-token
    github-optional:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          optional: true
          secretName: oauth-token
    gocache:
      volumeMounts:
      - mountPath: /gocache
        name: build-cache
        subPath: gocache
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    kind:
      volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
        readOnly: true
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - emptyDir: {}
        name: docker-root
    release:
      env:
      - name: COSIGN_KEY
        valueFrom:
          secretKeyRef:
            key: key
            name: cosign-key
      - name: DOCKER_CONFIG
        value: /etc/rel-pipeline-docker-config
      - name: GITHUB_TOKEN_FILE
        value: /etc/github/rel-pipeline-github
      - name: GRAFANA_TOKEN_FILE
        value: /etc/grafana/token
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/rel-pipeline-service-account.json
      volumeMounts:
      - mountPath: /etc/rel-pipeline-docker-config
        name: rel-pipeline-docker-config
      - mountPath: /etc/github
        name: rel-pipeline-github
        readOnly: true
      - mountPath: /etc/grafana
        name: rel-pipeline-grafana
        readOnly: true
      - mountPath: /etc/service-account
        name: rel-pipeline-service-account
        readOnly: true
      volumes:
      - name: rel-pipeline-service-account
        secret:
          secretName: rel-pipeline-service-account
      - name: rel-pipeline-github
        secret:
          secretName: rel-pipeline-github
      - name: rel-pipeline-grafana
        secret:
          secretName: grafana-token
      - name: rel-pipeline-docker-config
        secret:
          secretName: rel-pipeline-docker-config
  requirements:
  - cache
  - cache
  - docker
  - github
  resources: build
  resources_presets:
    build:
      limits:
        cpu: "8"
        memory: 24Gi
      requests:
        cpu: "8"
        memory: 4Gi
    default:
      limits:
        cpu: "3"
        memory: 24Gi
      requests:
        cpu: "1"
        memory: 3Gi
  service_account_name: prowjob-advanced-sa
  types:
  - postsubmit
- architectures:
  - arm64
  command:
  - entrypoint
  - make
  - containers
  env:
  - name: BUILD_WITH_CONTAINER
    value: "0"
  - name: MANIFEST_ARCH
  image: gcr.io/istio-testing/build-tools:release-1.16-8486d4a9cee5aabbcf2a332c85a56d3339585e5d
  name: containers
  node_selector:
    testing: test-pool
  regex: docker/.+|cmd/.+|pkg/.+
  requirement_presets:
    cache:
      volumeMounts:
      - mountPath: /home/prow/go/pkg
        name: build-cache
        subPath: gomod
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    docker:
      volumeMounts:
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - emptyDir: {}
        name: docker-root
    github:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          secretName: oauth-token
    github-optional:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          optional: true
          secretName: oauth-token
    gocache:
      volumeMounts:
      - mountPath: /gocache
        name: build-cache
        subPath: gocache
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    kind:
      volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
        readOnly: true
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - emptyDir: {}
        name: docker-root
    release:
      env:
      - name: COSIGN_KEY
        valueFrom:
          secretKeyRef:
            key: key
            name: cosign-key
      - name: DOCKER_CONFIG
        value: /etc/rel-pipeline-docker-config
      - name: GITHUB_TOKEN_FILE
        value: /etc/github/rel-pipeline-github
      - name: GRAFANA_TOKEN_FILE
        value: /etc/grafana/token
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/rel-pipeline-service-account.json
      volumeMounts:
      - mountPath: /etc/rel-pipeline-docker-config
        name: rel-pipeline-docker-config
      - mountPath: /etc/github
        name: rel-pipeline-github
        readOnly: true
      - mountPath: /etc/grafana
        name: rel-pipeline-grafana
        readOnly: true
      - mountPath: /etc/service-account
        name: rel-pipeline-service-account
        readOnly: true
      volumes:
      - name: rel-pipeline-service-account
        secret:
          secretName: rel-pipeline-service-account
      - name: rel-pipeline-github
        secret:
          secretName: rel-pipeline-github
      - name: rel-pipeline-grafana
        secret:
          secretName: grafana-token
      - name: rel-pipeline-docker-config
        secret:
          secretName: rel-pipeline-docker-config
  requirements:
  - cache
  - cache
  - docker
  resources: build
  resources_presets:
    build:
      limits:
        cpu: "8"
        memory: 24Gi
      requests:
        cpu: "8"
        memory: 4Gi
    default:
      limits:
        cpu: "3"
        memory: 24Gi
      requests:
        cpu: "1"
        memory: 3Gi
  service_account_name: prowjob-advanced-sa
  types:
  - postsubmit
- command:
  - entrypoint
  - make
  - containers-test
  env:
  - name: BUILD_WITH_CONTAINER
    value: "0"
  image: gcr.io/istio-testing/build-tools:release-1.16-8486d4a9cee5aabbcf2a332c85a56d3339585e5d
  name: containers-test
  node_selector:
    testing: test-pool
  regex: docker/.+|cmd/.+
  requirement_presets:
    cache:
      volumeMounts:
      - mountPath: /home/prow/go/pkg
        name: build-cache
        subPath: gomod
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    docker:
      volumeMounts:
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - emptyDir: {}
        name: docker-root
    github:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          secretName: oauth-token
    github-optional:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          optional: true
          secretName: oauth-token
    gocache:
      volumeMounts:
      - mountPath: /gocache
        name: build-cache
        subPath: gocache
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    kind:
      volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
        readOnly: true
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - emptyDir: {}
        name: docker-root
    release:
      env:
      - name: COSIGN_KEY
        valueFrom:
          secretKeyRef:
            key: key
            name: cosign-key
      - name: DOCKER_CONFIG
        value: /etc/rel-pipeline-docker-config
      - name: GITHUB_TOKEN_FILE
        value: /etc/github/rel-pipeline-github
      - name: GRAFANA_TOKEN_FILE
        value: /etc/grafana/token
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/rel-pipeline-service-account.json
      volumeMounts:
      - mountPath: /etc/rel-pipeline-docker-config
        name: rel-pipeline-docker-config
      - mountPath: /etc/github
        name: rel-pipeline-github
        readOnly: true
      - mountPath: /etc/grafana
        name: rel-pipeline-grafana
        readOnly: true
      - mountPath: /etc/service-account
        name: rel-pipeline-service-account
        readOnly: true
      volumes:
      - name: rel-pipeline-service-account
        secret:
          secretName: rel-pipeline-service-account
      - name: rel-pipeline-github
        secret:
          secretName: rel-pipeline-github
      - name: rel-pipeline-grafana
        secret:
          secretName: grafana-token
      - name: rel-pipeline-docker-config
        secret:
          secretName: rel-pipeline-docker-config
  requirements:
  - cache
  - cache
  - docker
  resources: build
  resources_presets:
    build:
      limits:
        cpu: "8"
        memory: 24Gi
      requests:
        cpu: "8"
        memory: 4Gi
    default:
      limits:
        cpu: "3"
        memory: 24Gi
      requests:
        cpu: "1"
        memory: 3Gi
  service_account_name: prowjob-advanced-sa
  types:
  - presubmit
- architectures:
  - arm64
  command:
  - entrypoint
  - make
  - containers-test
  env:
  - name: BUILD_WITH_CONTAINER
    value: "0"
  image: gcr.io/istio-testing/build-tools:release-1.16-8486d4a9cee5aabbcf2a332c85a56d3339585e5d
  name: containers-test
  node_selector:
    testing: test-pool
  regex: docker/.+|cmd/.+|pkg/.+
  requirement_presets:
    cache:
      volumeMounts:
      - mountPath: /home/prow/go/pkg
        name: build-cache
        subPath: gomod
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    docker:
      volumeMounts:
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - emptyDir: {}
        name: docker-root
    github:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          secretName: oauth-token
    github-optional:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          optional: true
          secretName: oauth-token
    gocache:
      volumeMounts:
      - mountPath: /gocache
        name: build-cache
        subPath: gocache
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    kind:
      volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
        readOnly: true
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - emptyDir: {}
        name: docker-root
    release:
      env:
      - name: COSIGN_KEY
        valueFrom:
          secretKeyRef:
            key: key
            name: cosign-key
      - name: DOCKER_CONFIG
        value: /etc/rel-pipeline-docker-config
      - name: GITHUB_TOKEN_FILE
        value: /etc/github/rel-pipeline-github
      - name: GRAFANA_TOKEN_FILE
        value: /etc/grafana/token
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/rel-pipeline-service-account.json
      volumeMounts:
      - mountPath: /etc/rel-pipeline-docker-config
        name: rel-pipeline-docker-config
      - mountPath: /etc/github
        name: rel-pipeline-github
        readOnly: true
      - mountPath: /etc/grafana
        name: rel-pipeline-grafana
        readOnly: true
      - mountPath: /etc/service-account
        name: rel-pipeline-service-account
        readOnly: true
      volumes:
      - name: rel-pipeline-service-account
        secret:
          secretName: rel-pipeline-service-account
      - name: rel-pipeline-github
        secret:
          secretName: rel-pipeline-github
      - name: rel-pipeline-grafana
        secret:
          secretName: grafana-token
      - name: rel-pipeline-docker-config
        secret:
          secretName: rel-pipeline-docker-config
  requirements:
  - cache
  - cache
  - docker
  resources: build
  resources_presets:
    build:
      limits:
        cpu: "8"
        memory: 24Gi
      requests:
        cpu: "8"
        memory: 4Gi
    default:
      limits:
        cpu: "3"
        memory: 24Gi
      requests:
        cpu: "1"
        memory: 3Gi
  service_account_name: prowjob-advanced-sa
  types:
  - presubmit
- command:
  - entrypoint
  - make
  - -C
  - perf_dashboard
  - deploy
  env:
  - name: BUILD_WITH_CONTAINER
    value: "0"
  image: gcr.io/istio-testing/build-tools:release-1.16-8486d4a9cee5aabbcf2a332c85a56d3339585e5d
  name: deploy-perf-dashboard
  node_selector:
    testing: test-pool
  regex: ^perf_dashboard/
  requirement_presets:
    cache:
      volumeMounts:
      - mountPath: /home/prow/go/pkg
        name: build-cache
        subPath: gomod
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    docker:
      volumeMounts:
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - emptyDir: {}
        name: docker-root
    github:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          secretName: oauth-token
    github-optional:
      volumeMounts:
      - mountPath: /etc/github-token
        name: github
        readOnly: true
      volumes:
      - name: github
        secret:
          optional: true
          secretName: oauth-token
    gocache:
      volumeMounts:
      - mountPath: /gocache
        name: build-cache
        subPath: gocache
      volumes:
      - hostPath:
          path: /var/tmp/prow/cache
          type: DirectoryOrCreate
        name: build-cache
    kind:
      volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
        readOnly: true
      - mountPath: /var/lib/docker
        name: docker-root
      volumes:
      - hostPath:
          path: /lib/modules
          type: Directory
        name: modules
      - hostPath:
          path: /sys/fs/cgroup
          type: Directory
        name: cgroup
      - emptyDir: {}
        name: docker-root
    release:
      env:
      - name: COSIGN_KEY
        valueFrom:
          secretKeyRef:
            key: key
            name: cosign-key
      - name: DOCKER_CONFIG
        value: /etc/rel-pipeline-docker-config
      - name: GITHUB_TOKEN_FILE
        value: /etc/github/rel-pipeline-github
      - name: GRAFANA_TOKEN_FILE
        value: /etc/grafana/token
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/rel-pipeline-service-account.json
      volumeMounts:
      - mountPath: /etc/rel-pipeline-docker-config
        name: rel-pipeline-docker-config
      - mountPath: /etc/github
        name: rel-pipeline-github
        readOnly: true
      - mountPath: /etc/grafana
        name: rel-pipeline-grafana
        readOnly: true
      - mountPath: /etc/service-account
        name: rel-pipeline-service-account
        readOnly: true
      volumes:
      - name: rel-pipeline-service-account
        secret:
          secretName: rel-pipeline-service-account
      - name: rel-pipeline-github
        secret:
          secretName: rel-pipeline-github
      - name: rel-pipeline-grafana
        secret:
          secretName: grafana-token
      - name: rel-pipeline-docker-config
        secret:
          secretName: rel-pipeline-docker-config
  requirements:
  - cache
  - cache
  - docker
  resources_presets:
    build:
      limits:
        cpu: "8"
        memory: 24Gi
      requests:
        cpu: "8"
        memory: 4Gi
    default:
      limits:
        cpu: "3"
        memory: 24Gi
      requests:
        cpu: "1"
        memory: 3Gi
  service_account_name: prowjob-advanced-sa
  types:
  - postsubmit
node_selector:
  testing: test-pool
org: istio
repo: tools
requirement_presets:
  cache:
    volumeMounts:
    - mountPath: /home/prow/go/pkg
      name: build-cache
      subPath: gomod
    volumes:
    - hostPath:
        path: /var/tmp/prow/cache
        type: DirectoryOrCreate
      name: build-cache
  docker:
    volumeMounts:
    - mountPath: /var/lib/docker
      name: docker-root
    volumes:
    - emptyDir: {}
      name: docker-root
  github:
    volumeMounts:
    - mountPath: /etc/github-token
      name: github
      readOnly: true
    volumes:
    - name: github
      secret:
        secretName: oauth-token
  github-optional:
    volumeMounts:
    - mountPath: /etc/github-token
      name: github
      readOnly: true
    volumes:
    - name: github
      secret:
        optional: true
        secretName: oauth-token
  gocache:
    volumeMounts:
    - mountPath: /gocache
      name: build-cache
      subPath: gocache
    volumes:
    - hostPath:
        path: /var/tmp/prow/cache
        type: DirectoryOrCreate
      name: build-cache
  kind:
    volumeMounts:
    - mountPath: /lib/modules
      name: modules
      readOnly: true
    - mountPath: /sys/fs/cgroup
      name: cgroup
      readOnly: true
    - mountPath: /var/lib/docker
      name: docker-root
    volumes:
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - hostPath:
        path: /sys/fs/cgroup
        type: Directory
      name: cgroup
    - emptyDir: {}
      name: docker-root
  release:
    env:
    - name: COSIGN_KEY
      valueFrom:
        secretKeyRef:
          key: key
          name: cosign-key
    - name: DOCKER_CONFIG
      value: /etc/rel-pipeline-docker-config
    - name: GITHUB_TOKEN_FILE
      value: /etc/github/rel-pipeline-github
    - name: GRAFANA_TOKEN_FILE
      value: /etc/grafana/token
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /etc/service-account/rel-pipeline-service-account.json
    volumeMounts:
    - mountPath: /etc/rel-pipeline-docker-config
      name: rel-pipeline-docker-config
    - mountPath: /etc/github
      name: rel-pipeline-github
      readOnly: true
    - mountPath: /etc/grafana
      name: rel-pipeline-grafana
      readOnly: true
    - mountPath: /etc/service-account
      name: rel-pipeline-service-account
      readOnly: true
    volumes:
    - name: rel-pipeline-service-account
      secret:
        secretName: rel-pipeline-service-account
    - name: rel-pipeline-github
      secret:
        secretName: rel-pipeline-github
    - name: rel-pipeline-grafana
      secret:
        secretName: grafana-token
    - name: rel-pipeline-docker-config
      secret:
        secretName: rel-pipeline-docker-config
requirements:
- cache
- cache
resources_presets:
  build:
    limits:
      cpu: "8"
      memory: 24Gi
    requests:
      cpu: "8"
      memory: 4Gi
  default:
    limits:
      cpu: "3"
      memory: 24Gi
    requests:
      cpu: "1"
      memory: 3Gi
